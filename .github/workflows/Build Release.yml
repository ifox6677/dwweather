name: Build Release APK

on: 
  workflow_dispatch:  # Allow manual triggering of the workflow

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2  # Use v2 for the checkout action

    # Set project directory permissions
    - name: Set project directory permissions
      run: |
        sudo chmod -R 755 .  # Proper chmod usage with the dot to target the current directory
        echo "Set permissions for the project directory"

    - name: Setup JDK 17
      uses: actions/setup-java@v2  # Use v2 for the setup-java action
      with:
        java-version: 17  # Set the Java version to 17
        distribution: 'zulu'  # Use the Zulu JDK distribution

    # Ensure necessary directories exist
    # Configure signing properties directly in the file
    - name: Configure signing properties
      run: |
        echo "keyAlias=${{ secrets.KEY_ALIAS }}" > ./key.properties
        echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> ./key.properties
        echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> ./key.properties
        echo "Successfully configured signing properties"

    # Decode keystore file and save it to the specified location
    - name: Decode keystore file
      run: |
        echo "${{ secrets.KEY_STORE }}" | base64 --decode > ./app/key.jks
        if [ ! -f ./app/key.jks ]; then
          echo "ERROR: key.jks file was not created."
          exit 1
        fi
        echo "Successfully decoded keystore file"
    - name: Verify keystore file
      run: ls -l ./app/key.jks    

    # Ensure gradlew is executable
    - name: Make gradlew executable
      run: chmod +x gradlew

    # Build the release APK using Gradle
    - name: Build with Gradle
      run: |
        ./gradlew assembleArm64Release || (echo "Gradle build failed, check the logs" && exit 1)
        echo "Successfully built the release APK"

    # Upload the APK as an artifact
    - name: Upload APK
      uses: actions/upload-artifact@v3  # Use v3 for the upload-artifact action
      with:
        name: DDweather-release
        path: app/build/outputs/apk/release/app-arm64-v8a-release.apk  # Path to the release APK
