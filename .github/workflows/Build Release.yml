name: Build Release APK

on: 
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2  # 使用 v2 版本

    - name: Setup JDK 17
      uses: actions/setup-java@v3  # 使用 v3 版本
      with:
        java-version: 17  # 设置 JDK 版本为 17

    # 配置签名属性
    - name: Configure signing properties
      run: |
        echo "keyAlias=${{ secrets.KEY_ALIAS }}" > ${{ env.PROPERTIES_PATH }}
        echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> ${{ env.PROPERTIES_PATH }}
        echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> ${{ env.PROPERTIES_PATH }}

    # 解码 keystore 文件并保存到指定位置
    - name: Decode keystore file
      run: echo "${{ secrets.KEY_STORE }}" | base64 --decode > android/app/key.jks

    # 使用 Gradle 构建 release 版本的 APK
    - name: Build with Gradle
      run: ./gradlew assembleRelease  # 执行构建命令

    # 上传生成的 APK 文件
    - name: Upload APK
      uses: actions/upload-artifact@v3  # 使用 v3 版本
      with:
        name: DDweather-release.apk
        path: app/build/outputs/apk/release/app-release.apk  # 上传构建好的 APK

    # 在 GitHub 上创建 Release，并将 APK 文件上传到 Release 页面
    - name: Create release
      uses: marvinpinto/action-automatic-releases@v1  # 使用 v3 版本
      if: github.ref == 'refs/heads/master'  # 仅在 master 分支上创建 release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: "latest"  # 设置 release 标签
        prerelease: false  # 设置为正式发布，不是预发布
        title: ${{ github.sha }}  # 使用当前 commit 的 SHA 作为 release 标题
        files: |
          app/build/outputs/apk/release/app-release.apk  # 上传构建好的 APK 到 Release 页面
